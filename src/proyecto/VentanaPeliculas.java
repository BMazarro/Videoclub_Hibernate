/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;
import ES.ES;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import org.hibernate.Session;

/**
 *
 * @author BEA
 */
public class VentanaPeliculas extends javax.swing.JDialog {
    Session session;
    DefaultTableModel modelo = new DefaultTableModel();
    int contador;
    int estado=0;
    Pattern patronnumerico = Pattern.compile("[0-9]");
    Pattern patrontextual = Pattern.compile("[a-zA-Z]");
    Matcher m1, m2;
    /**
     * Creates new form VentanaPeliculas
     */
    public VentanaPeliculas(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);    
        cb.addItem("Id");
        cb.addItem("Título");
        cb.addItem("Director");
        cb.addItem("Género");
        cb.setSelectedIndex(0);
        session = NewHibernateUtil.getSessionFactory().openSession(); 
        BotonesInactivos();
        datosInactivos();
        inicializarTablaPeliculas();
        cuentaPeliculas(session);
        MostrarPeliculas(session);
    }
    public void MostrarPeliculas(Session s){
        Peliculas a= new Peliculas();
        Query q = s.createQuery("from Peliculas order by idpel");
        Iterator<Peliculas> iter= q.iterate();
        Object[] fila= new Object[4];
        
        while (iter.hasNext()){
                a= (Peliculas) iter.next();
                fila[0]= a.getIdpel();
                fila[1]= a.getTitulo();
                fila[2]= a.getDirector();
                fila[3]= a.getGenero() ;
        //        fila[5]= a.getImporte();
            //System.out.println(""+a);
            modelo.addRow(fila);
        }
    }
    public void inicializarTablaPeliculas(){
        tabPeliculas.setModel(modelo);
        modelo.addColumn("ID");
        modelo.addColumn("TITULO");
        modelo.addColumn("DIRECTOR");
        modelo.addColumn("GÉNERO");
    }
     public void cuentaPeliculas(Session s){
        contador=0;
        Peliculas c= new Peliculas();
        Query q = s.createQuery("from Peliculas");
        Iterator<Peliculas> iter= q.iterate();
        while(iter.hasNext()){
            c= (Peliculas) iter.next();
            contador=contador+1;
        }  
        System.out.println("Hay "+contador+" peliculas");
    }
    // -------------- LIMPIAR LA TABLA ---------------------------------
    void limpiarTablaPeliculas(){
        while (tabPeliculas.getRowCount()!=0){
           ((DefaultTableModel)tabPeliculas.getModel()).removeRow(0);
        }
    }
    // ------------- LIMPIAR DATOS DE LA PELICULA ------------------------
    void limpiarDatos(){
        labid.setText("");
        ttitulo.setText("");
        tdirector.setText("");
        tactores.setText("");
        tgenero.setText("");
        testreno.setText("");
        tvalora.setText("");
        tcantidad.setText("");
        tdescripcion.setText("");
    }
    public void BotonesInactivos(){    
        bborrar.setEnabled(false);
        bmodificar.setEnabled(false);
        btodas.setEnabled(false);
        bficha.setEnabled(true);
        bnueva.setEnabled(true);
        baceptar.setEnabled(false);
        bcancelar.setEnabled(false);
        bnovedades.setEnabled(true);
        bvaloradas.setEnabled(true);
        bbuscar.setEnabled(true);
        bborrarejem.setEnabled(false);
        bintroejem.setEnabled(false);
        /*badelante.setEnabled(false);*/
    }
    public void datosActivos(){
        
        ttitulo.setEditable(true);
        tdirector.setEditable(true);
        tactores.setEditable(true);
        tgenero.setEditable(true);
        testreno.setEditable(true);
        tvalora.setEditable(true);
        tcantidad.setEditable(false);
        tdescripcion.setEditable(true);
    }
    public void datosInactivos(){
        ttitulo.setEditable(false);
        tdirector.setEditable(false);
        tactores.setEditable(false);
        tgenero.setEditable(false);
        testreno.setEditable(false);
        tvalora.setEditable(false);
        tcantidad.setEditable(false);
        tdescripcion.setEditable(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        tpelicula = new javax.swing.JTextField();
        cb = new javax.swing.JComboBox();
        bbuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabPeliculas = new javax.swing.JTable();
        btodas = new javax.swing.JButton();
        bficha = new javax.swing.JButton();
        bnovedades = new javax.swing.JButton();
        bvaloradas = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        tdirector = new javax.swing.JTextField();
        ttitulo = new javax.swing.JTextField();
        tactores = new javax.swing.JTextField();
        tgenero = new javax.swing.JTextField();
        testreno = new javax.swing.JTextField();
        tvalora = new javax.swing.JTextField();
        tdescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tcantidad = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        bnueva = new javax.swing.JButton();
        bborrar = new javax.swing.JButton();
        bmodificar = new javax.swing.JButton();
        baceptar = new javax.swing.JButton();
        bcancelar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        labid = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        bintroejem = new javax.swing.JButton();
        bborrarejem = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Americana XBd BT", 1, 24)); // NOI18N
        jLabel1.setText("PELICULAS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 21, 166, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bbuscar.setText("BUSCAR");
        bbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbuscarActionPerformed(evt);
            }
        });

        tabPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabPeliculas);

        btodas.setText("VER TODAS");
        btodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btodasActionPerformed(evt);
            }
        });

        bficha.setText("VER FICHA");
        bficha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bfichaActionPerformed(evt);
            }
        });

        bnovedades.setText("NOVEDADES");
        bnovedades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnovedadesActionPerformed(evt);
            }
        });

        bvaloradas.setText("MÁS VALORADAS");
        bvaloradas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bvaloradasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bbuscar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(bnovedades)
                                .addGap(40, 40, 40)
                                .addComponent(bvaloradas))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tpelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btodas)
                            .addComponent(bficha))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bbuscar))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(tpelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bnovedades)
                            .addComponent(bvaloradas))
                        .addContainerGap(23, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btodas)
                        .addGap(26, 26, 26)
                        .addComponent(bficha)
                        .addGap(103, 103, 103))))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 49, 750, 340));

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("Título");

        jLabel4.setText("Director");

        jLabel5.setText("Actores");

        jLabel6.setText("Género");

        jLabel7.setText("Fecha de Estreno");

        jLabel8.setText("Valoración");

        jLabel9.setText("Descripción");

        jLabel12.setText("Ejemplares");

        jLabel11.setText("AAAA-MM-DD");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(tactores, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(36, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel11))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                        .addGap(110, 110, 110)
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(tgenero)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(testreno, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(38, 38, 38))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tdirector, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                                        .addComponent(ttitulo)))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tdescripcion)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(tvalora, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ttitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tdirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tactores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tgenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testreno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tvalora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(tcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 440, 430, 270));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("FICHA:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 410, -1, -1));

        bnueva.setText("NUEVA");
        bnueva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnuevaActionPerformed(evt);
            }
        });
        jPanel1.add(bnueva, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, 90, -1));

        bborrar.setText("BORRAR");
        bborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bborrarActionPerformed(evt);
            }
        });
        jPanel1.add(bborrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 470, 90, -1));

        bmodificar.setText("MODIFICAR");
        bmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmodificarActionPerformed(evt);
            }
        });
        jPanel1.add(bmodificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 500, -1, -1));

        baceptar.setText("ACEPTAR");
        baceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baceptarActionPerformed(evt);
            }
        });
        jPanel1.add(baceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 630, 80, -1));

        bcancelar.setText("CANCELAR");
        jPanel1.add(bcancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 670, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setText("ID PELICULA:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 410, -1, -1));

        labid.setText("jLabel11");
        jPanel1.add(labid, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 410, -1, -1));

        jButton1.setText("SALIR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 710, 80, -1));

        bintroejem.setText("INTRODUCIR EJEMPLARES");
        bintroejem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bintroejemActionPerformed(evt);
            }
        });
        jPanel1.add(bintroejem, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 540, -1, -1));

        bborrarejem.setText("BORRAR EJEMPLARES");
        bborrarejem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bborrarejemActionPerformed(evt);
            }
        });
        jPanel1.add(bborrarejem, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 580, 160, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbuscarActionPerformed
        // TODO add your handling code here:
        btodas.setEnabled(true);
        buscarPeliculas(session);
    }//GEN-LAST:event_bbuscarActionPerformed

    private void btodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btodasActionPerformed
        // TODO add your handling code here:
        limpiarTablaPeliculas();
        cuentaPeliculas(session);
        MostrarPeliculas(session);
    }//GEN-LAST:event_btodasActionPerformed

    private void bnovedadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnovedadesActionPerformed
        // TODO add your handling code here:
        VerNovedades(session);
    }//GEN-LAST:event_bnovedadesActionPerformed

    private void bvaloradasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bvaloradasActionPerformed
        // TODO add your handling code here:
        VerMasValoradas(session);
    }//GEN-LAST:event_bvaloradasActionPerformed

    private void bfichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bfichaActionPerformed
        // TODO add your handling code here:
        int indice=tabPeliculas.getSelectedRow();
        if (indice==-1){
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar un elemento de la tabla");
        }else{
            int id=(Integer)tabPeliculas.getValueAt(indice, 0);
            MostrarFicha(id);
        }
        bintroejem.setEnabled(true);
    }//GEN-LAST:event_bfichaActionPerformed

    private void bnuevaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnuevaActionPerformed
        // TODO add your handling code here:
        datosActivos();
        limpiarDatos();
        tcantidad.setEditable(false);
        estado=1;
        baceptar.setEnabled(true);
        bcancelar.setEnabled(true);
        int id = contador+1;
        labid.setText(""+id);
    }//GEN-LAST:event_bnuevaActionPerformed

    private void bmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmodificarActionPerformed
        // TODO add your handling code here:
        datosActivos();
        estado=2;
        baceptar.setEnabled(true);
        bcancelar.setEnabled(true);
        
    }//GEN-LAST:event_bmodificarActionPerformed

    private void baceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baceptarActionPerformed
        // TODO add your handling code here:
        Peliculas p=new Peliculas();
        boolean sigue=true;
        if (estado==1){ //Viene de una alta
            try{ 
                SimpleDateFormat formatoDelTexto = new SimpleDateFormat("yyyy-MM-dd");
                String fecha= testreno.getText();
                Date fe=null;
                fe = formatoDelTexto.parse(fecha);
                Peliculas a= new Peliculas(Integer.parseInt(labid.getText()),ttitulo.getText(),tdirector.getText(),tactores.getText(),tgenero.getText(),fe,Double.parseDouble(tvalora.getText()), tdescripcion.getText());
                session.beginTransaction();
                session.save(a);
                session.getTransaction().commit(); 
                JOptionPane.showMessageDialog(rootPane,"Pelicula introducido correctamente");
                limpiarDatos();
                baceptar.setEnabled(false);
                bcancelar.setEnabled(false);
                labid.setText("");
                
                bbuscar.setEnabled(true);
                bnueva.setEnabled(true);
                contador=contador+1;
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(rootPane,"Debe introducir correctamente los datos Valoracion y Fecha");
            }  
        }
        if (estado==2){ // Viene de una modificación
            while (sigue){
                    p = (Peliculas)session.get(Peliculas.class, Integer.parseInt(labid.getText()));
                    if (p == null){
                        JOptionPane.showMessageDialog(rootPane,"El ID no existe");
                        sigue= true;
                    }
                    else {            
                        try {
                            sigue= false;
                            SimpleDateFormat formatoDelTexto = new SimpleDateFormat("yyyy-MM-dd");
                            String fecha= testreno.getText();
                            Date fe=null;
                            fe = formatoDelTexto.parse(fecha);
                            p.setTitulo(ttitulo.getText());
                            p.setDirector(tdirector.getText());
                            p.setActores(tactores.getText());
                            p.setGenero(tgenero.getText());
                            p.setFechaestreno(fe);
                            p.setValoracion(Double.parseDouble(tvalora.getText()));
                            p.setDescripcion(tdescripcion.getText());
                            session.beginTransaction();
                            session.update(p);
                            session.getTransaction().commit(); 
                            JOptionPane.showMessageDialog(rootPane,"Datos modificados correctamente"); 
                            baceptar.setEnabled(false);
                            bcancelar.setEnabled(false);
                            datosInactivos();
                            labid.setText("");                           

                           
                            bbuscar.setEnabled(true);
                            bnueva.setEnabled(true);   
                            bborrar.setEnabled(true);
                            bmodificar.setEnabled(true);
                            btodas.setEnabled(true);
                        } catch (ParseException ex) {
                            Logger.getLogger(VentanaPeliculas.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
                
        bintroejem.setEnabled(true);
    }//GEN-LAST:event_baceptarActionPerformed

    private void bborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bborrarActionPerformed
        // TODO add your handling code here:
        String confirmado; 
        boolean sigue=true;
        boolean sigue2=true;
        boolean encontrado = false;
        Peliculas aux= new Peliculas();
        try{
            while (sigue){
                aux = (Peliculas)session.get(Peliculas.class, Integer.parseInt(labid.getText()));
                if (aux == null){
                    JOptionPane.showMessageDialog(rootPane,"El ID no existe");
                    sigue= true;
                }
                else {            
                    sigue= false;
                    confirmado= JOptionPane.showInputDialog(rootPane,"Desea eliminarlo? S/N");
                    if (confirmado.compareToIgnoreCase("S")==0){
                        
                        Query q = session.createQuery("from Ejemplares where idpel="+labid.getText());
                        Iterator<Peliculas> iter= q.iterate();
                        if (iter.hasNext()) {
                            encontrado=true;
                            JOptionPane.showMessageDialog(rootPane, "Esta pelicula tiene ejemplares. Debe eliminarlos primero");
                            bborrarejem.setEnabled(true);                           
                        }                      
                        else {
                            session.beginTransaction();
                            session.delete(aux);
                            session.getTransaction().commit();
                            JOptionPane.showMessageDialog(rootPane,"Pelicula eliminada");
                            limpiarDatos();
                            bborrar.setEnabled(false);
                            bmodificar.setEnabled(false);
                            btodas.setEnabled(false);
                        }
                    }
                }
            }
        }
        catch (Exception e){
            e.getMessage();
        }  
        cuentaPeliculas(session);
    }//GEN-LAST:event_bborrarActionPerformed

    private void bborrarejemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bborrarejemActionPerformed
        // TODO add your handling code here:
        borrarEjemplares(session);
    }//GEN-LAST:event_bborrarejemActionPerformed

    private void bintroejemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bintroejemActionPerformed
        // TODO add your handling code here:
        int total=0;
        total=cuentaejemplaresid(Integer.parseInt(labid.getText()),session);
        int nuevos=Integer.parseInt(JOptionPane.showInputDialog(rootPane, "Cuantos ejemplares desea introducir?"));
        
        for (int i=0; i<nuevos;i++){
            Ejemplares a= new Ejemplares(new EjemplaresId(Integer.parseInt(labid.getText()),total+(i+1)),"Disponible");
            session.beginTransaction();
            session.save(a);
            session.getTransaction().commit(); 
        }
        JOptionPane.showMessageDialog(rootPane, "Ejemplares Actualizados");
        int ejemplares= cuentaejemplaresid(Integer.parseInt(labid.getText()),session);
        tcantidad.setText(""+ejemplares);
    }//GEN-LAST:event_bintroejemActionPerformed
    
    public int cuentaejemplaresid(int id,Session s){
        int contador2=0;
        Ejemplares c= new Ejemplares();
        Query q = s.createQuery("from Ejemplares where idpel="+id);
        Iterator<Ejemplares> iter= q.iterate();
        while(iter.hasNext()){
            c= (Ejemplares) iter.next();
            contador2=contador2+1;
        }  
        System.out.println("Hay "+contador2+" ejemplares");
        return contador2;
    }
    public void borrarEjemplares(Session s){
        Ejemplares ej=new Ejemplares();
        String confirmado2= JOptionPane.showInputDialog(rootPane,"Desea eliminarlos? S/N");
        if (confirmado2.compareToIgnoreCase("S")==0){
            Query q2 = session.createQuery("from Ejemplares where idpel="+labid.getText()+" and estado='Alquilada'");
            Iterator<Peliculas> iter2= q2.iterate();
            if (iter2.hasNext()) {
                JOptionPane.showMessageDialog(rootPane, "Esta pelicula tiene ejemplares pendientes de devolución");

            }
            
            else{
                Query q4 = session.createQuery("from Ejemplares where idpel="+labid.getText());
                Iterator<Ejemplares> iter4= q4.iterate();
                while(iter4.hasNext()){
                    ej= (Ejemplares)iter4.next();
                    session.beginTransaction();
                    session.delete(ej);
                    session.getTransaction().commit();
                }
                
                JOptionPane.showMessageDialog(rootPane,"Ejemplares eliminados");

            }
        }
    }
            
    
    public void MostrarFicha(int id){
        Peliculas p= new Peliculas();
        p = (Peliculas)session.get(Peliculas.class, id);
                    if (p==null){
                        //sigue=true;
                        JOptionPane.showMessageDialog(rootPane, "La pelicula no existe");
                    }
                    else{       
                        //sigue=false;                    
                        labid.setText(""+p.getIdpel());
                        ttitulo.setText(p.getTitulo());
                        tdirector.setText(p.getDirector());
                        tactores.setText(p.getActores());
                        tgenero.setText(p.getGenero());
                        testreno.setText(String.valueOf(p.getFechaestreno()));
                        tvalora.setText(String.valueOf(p.getValoracion()));
                        tdescripcion.setText(p.getDescripcion());
                        tcantidad.setText(String.valueOf(cuentaejemplaresid(id,session)));
                        bnueva.setEnabled(true);
                        bborrar.setEnabled(true);
                        bmodificar.setEnabled(true);
                        
                    }
    }
            
    
    public void VerMasValoradas(Session s){
                limpiarTablaPeliculas();
                Peliculas a= new Peliculas();
                Query q=null;
                q = s.createQuery("from Peliculas where valoracion > 7.5");
                Iterator<Peliculas> iter= q.iterate();
                Object[] fila= new Object[4];
                int i=0;
                while (iter.hasNext()){
                        a= (Peliculas) iter.next();
                        fila[0]= a.getIdpel();
                        fila[1]= a.getTitulo();
                        fila[2]= a.getDirector();
                        fila[3]= a.getGenero() ;
                        modelo.addRow(fila);
                 }
    }
    
    public void VerNovedades(Session s){
                limpiarTablaPeliculas();
                Peliculas a= new Peliculas();
                Query q=null;
                q = s.createQuery("from Peliculas where fechaestreno between '2014-03-01' and '2014-03-31'");
                Iterator<Peliculas> iter= q.iterate();
                Object[] fila= new Object[4];
                int i=0;
                while (iter.hasNext()){
                        a= (Peliculas) iter.next();
                        fila[0]= a.getIdpel();
                        fila[1]= a.getTitulo();
                        fila[2]= a.getDirector();
                        fila[3]= a.getGenero() ;
                        modelo.addRow(fila);
                 }
    }
    
    public void buscarPeliculas(Session s){
        limpiarDatos();
        limpiarTablaPeliculas();
        int n= cb.getSelectedIndex();
        Peliculas a= new Peliculas();
        Query q=null;
        boolean sigue=true;
        if (n==0){      // buscar por id
            m1 = patronnumerico.matcher(tpelicula.getText());
            if (m1.find()){
                q = s.createQuery("from Peliculas where idpel="+tpelicula.getText());
                Iterator<Peliculas> iter= q.iterate();
                Object[] fila= new Object[4];
                int i=0;
                if (iter.hasNext()){
                        a= (Peliculas) iter.next();
                        fila[0]= a.getIdpel();
                        fila[1]= a.getTitulo();
                        fila[2]= a.getDirector();
                        fila[3]= a.getGenero() ;
                        modelo.addRow(fila);
                 }else{
                    JOptionPane.showMessageDialog(rootPane, "No existe ninguna pelicula con ese ID");
                 }
            }else{
                tpelicula.setText("");
                JOptionPane.showMessageDialog(rootPane, "Debe introducir un valor numerico si busca por ID");
            }
            
        }
        if (n==1){      // buscar por Titulo
                String titulo= tpelicula.getText();
                JOptionPane.showMessageDialog(rootPane, "Busca por titulo");
                for (int i=1; i<=contador; i++){
                    a = (Peliculas)session.get(Peliculas.class, i);
                    String pelnom= a.getTitulo();
                    if (pelnom.compareToIgnoreCase(titulo)==0){
                        sigue=false;                   
                        Object[] fila= new Object[4];                      
                        fila[0]= a.getIdpel();
                        fila[1]= a.getTitulo();
                        fila[2]= a.getDirector();
                        fila[3]= a.getGenero() ;
                        modelo.addRow(fila);
                        i=contador+1;
                    }
                    else{         
                        sigue=true;
                        tpelicula.setText("");
                    }
                }
                if (sigue){
                    JOptionPane.showMessageDialog(rootPane, "No existe ninguna pelicula con ese título");
                }
        }
        if (n==2){      // buscar por director
            String director= tpelicula.getText();
            m1 = patrontextual.matcher(director);
            if (m1.find()){
                JOptionPane.showMessageDialog(rootPane, "Busca por director");
                for (int i=1; i<=contador; i++){
                    a = (Peliculas)session.get(Peliculas.class, i);
                    String pelnom= a.getDirector();
                    if (pelnom.compareToIgnoreCase(director)==0){
                        sigue=false;                   
                        Object[] fila= new Object[4];                      
                        fila[0]= a.getIdpel();
                        fila[1]= a.getTitulo();
                        fila[2]= a.getDirector();
                        fila[3]= a.getGenero() ;
                        modelo.addRow(fila);
                        i=contador+1;
                    }
                    else{         
                        sigue=true;
                        tpelicula.setText("");
                    }
                }
                if (sigue){
                    JOptionPane.showMessageDialog(rootPane, "No existe ninguna pelicula con ese director");
                }
            }else if (!m1.find()){
                tpelicula.setText("");
                JOptionPane.showMessageDialog(rootPane, "Debe introducir caracteres alfabeticos si busca por director");
                
            }
            
        }
        if (n==3){      // buscar por géneros
            String genero= tpelicula.getText();
            m1 = patrontextual.matcher(genero);
            if (m1.find()){
                JOptionPane.showMessageDialog(rootPane, "Busca por genero");
                for (int i=1; i<=contador; i++){
                    a = (Peliculas)session.get(Peliculas.class, i);
                    String pelnom= a.getGenero();
                    if (pelnom.compareToIgnoreCase(genero)==0){
                        sigue=false;                   
                        Object[] fila= new Object[4];                      
                        fila[0]= a.getIdpel();
                        fila[1]= a.getTitulo();
                        fila[2]= a.getDirector();
                        fila[3]= a.getGenero() ;
                        modelo.addRow(fila);
                        i=contador+1;
                    }
                    else{         
                        sigue=true;
                        tpelicula.setText("");
                    }
                }
                if (sigue){
                    JOptionPane.showMessageDialog(rootPane, "No existe ninguna pelicula con ese genero");
                }
            }else if (!m1.find()){
                tpelicula.setText("");
                JOptionPane.showMessageDialog(rootPane, "Debe introducir caracteres alfabeticos si busca por genero");
                
            }
        }
        
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPeliculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaPeliculas dialog = new VentanaPeliculas(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton baceptar;
    private javax.swing.JButton bborrar;
    private javax.swing.JButton bborrarejem;
    private javax.swing.JButton bbuscar;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton bficha;
    private javax.swing.JButton bintroejem;
    private javax.swing.JButton bmodificar;
    private javax.swing.JButton bnovedades;
    private javax.swing.JButton bnueva;
    private javax.swing.JButton btodas;
    private javax.swing.JButton bvaloradas;
    private javax.swing.JComboBox cb;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labid;
    private javax.swing.JTable tabPeliculas;
    private javax.swing.JTextField tactores;
    private javax.swing.JTextField tcantidad;
    private javax.swing.JTextField tdescripcion;
    private javax.swing.JTextField tdirector;
    private javax.swing.JTextField testreno;
    private javax.swing.JTextField tgenero;
    private javax.swing.JTextField tpelicula;
    private javax.swing.JTextField ttitulo;
    private javax.swing.JTextField tvalora;
    // End of variables declaration//GEN-END:variables
}
