/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.text.ParseException;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import org.hibernate.Session;
import ES.ES;

/**
 *
 * @author BEA
 */
public class VentanaClientes extends javax.swing.JDialog {
    Session session;
    DefaultTableModel modelo = new DefaultTableModel();
    int contador;
    Pattern patronnumerico = Pattern.compile("[0-9]");
    Pattern patrontextual = Pattern.compile("[a-zA-Z]");
    Matcher m1, m2;
    int estado=0;
    Calendar hoy;
    
    /**
     * Creates new form VentanaClientes
     */
    
    
    public VentanaClientes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);    
        combo.addItem("Id");
        combo.addItem("Nombre");
        combo.setSelectedIndex(0); 
        hoy=Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");

        labfecha.setText(""+sdf.format(hoy.getTime()));
        session = NewHibernateUtil.getSessionFactory().openSession(); 
        BotonesInactivos();
        datosInactivos();
        inicializarTablaAlquileres();
        cuentaClientes(session);
        MostrarUltimoRegistro();
        
        //ultimoCliente(session);
        //JOptionPane.showMessageDialog(rootPane, "Hay "+contador+" clientes");
        //mostrarTabla(session);
    }
    public void inicializarTablaAlquileres(){
        TabAlquileres.setModel(modelo);
        modelo.addColumn("CLIENTE");
        modelo.addColumn("PELICULA");
        modelo.addColumn("EJEMPLAR");
        modelo.addColumn("FECHA ALQ.");
        modelo.addColumn("FECHA PREVISTA");
        modelo.addColumn("FECHA DEVUELTA");
        
    }
    public void cuentaClientes(Session s){
        contador=0;
        Clientes c= new Clientes();
        Query q = s.createQuery("from Clientes");
        Iterator<Clientes> iter= q.iterate();
        while(iter.hasNext()){
            c= (Clientes) iter.next();
            contador=contador+1;
        }  
        System.out.println("Hay "+contador+" clientes");
    }
    public int ultimoCliente(Session s){
        Clientes c= new Clientes();
        Query q = s.createQuery("select max(idcli) from Clientes");
        List<Integer> l= q.list();
        int max=l.get(0);
        return max;
    }
    public int primerCliente(Session s){
        Clientes c= new Clientes();
        Query q = s.createQuery("select min(idcli) from Clientes");
        List<Integer> l= q.list();
        int min=l.get(0);
        return min;
    }
    /*
    public void mostrarTablaClientes(Session s){
    Clientes c= new Clientes();
    Query q = s.createQuery("from Clientes");
    Iterator<Clientes> iter= q.iterate();
    Object[] fila= new Object[8];
    int i=0;
    while (iter.hasNext()){
        c= (Clientes) iter.next();
        fila[0]= c.getIdcli();
        fila[1]= c.getNombre();
        fila[2]= c.getApellidos();
        fila[3]= c.getDireccion();
        fila[4]= c.getCodpostal();
        fila[5]= c.getLocalidad();
        fila[6]= c.getProvincia();
        fila[7]= c.getTelefono();
        //System.out.println(""+a);
        modelo.addRow(fila);
    }
}*/
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        combo = new javax.swing.JComboBox();
        bbuscar = new javax.swing.JButton();
        tcliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabAlquileres = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        bnuevo = new javax.swing.JButton();
        bborrar = new javax.swing.JButton();
        bmodificar = new javax.swing.JButton();
        bver = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tnombre = new javax.swing.JTextField();
        tapellidos = new javax.swing.JTextField();
        tdireccion = new javax.swing.JTextField();
        tlocalidad = new javax.swing.JTextField();
        tcp = new javax.swing.JTextField();
        tprovincia = new javax.swing.JTextField();
        ttfn = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        baceptar = new javax.swing.JButton();
        bcancelar = new javax.swing.JButton();
        tobservaciones = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        bprimero = new javax.swing.JButton();
        batras = new javax.swing.JButton();
        bultimo = new javax.swing.JButton();
        badelante = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        tid = new javax.swing.JTextField();
        bsalir = new javax.swing.JButton();
        bvertodos = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        labfecha = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("CLIENTES");

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 93, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        bbuscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        bbuscar.setText("BUSCAR");
        bbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbuscarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("ALQUILERES REALIZADOS:");

        TabAlquileres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        jScrollPane2.setViewportView(TabAlquileres);

        bnuevo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bnuevo.setText("NUEVO");
        bnuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnuevoActionPerformed(evt);
            }
        });

        bborrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bborrar.setText("BORRAR");
        bborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bborrarActionPerformed(evt);
            }
        });

        bmodificar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bmodificar.setText("MODIFICAR");
        bmodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmodificarActionPerformed(evt);
            }
        });

        bver.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bver.setText("VER ALQUILERES");
        bver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bverActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 204, 102));

        jLabel3.setText("NOMBRE:");

        jLabel4.setText("APELLIDOS:");

        jLabel5.setText("DIRECCIÓN:");

        jLabel6.setText("LOCALIDAD:");

        jLabel7.setText("C. POSTAL:");

        jLabel8.setText("PROVINCIA:");

        jLabel9.setText("TELÉFONO:");

        baceptar.setText("ACEPTAR");
        baceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baceptarActionPerformed(evt);
            }
        });

        bcancelar.setText("CANCELAR");
        bcancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcancelarActionPerformed(evt);
            }
        });

        jLabel10.setText("OBSERVACIONES:");

        bprimero.setText("<<");
        bprimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bprimeroActionPerformed(evt);
            }
        });

        batras.setText("<");
        batras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batrasActionPerformed(evt);
            }
        });

        bultimo.setText(">>");
        bultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bultimoActionPerformed(evt);
            }
        });

        badelante.setText(">");
        badelante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                badelanteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tobservaciones))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(13, 13, 13)
                                        .addComponent(tapellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tnombre))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(tprovincia, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ttfn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(tlocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tcp, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(baceptar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bcancelar)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(bprimero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(batras)
                .addGap(10, 10, 10)
                .addComponent(badelante)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bultimo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tapellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tdireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tlocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(tcp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tprovincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(ttfn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(tobservaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(baceptar)
                    .addComponent(bcancelar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bprimero)
                    .addComponent(batras)
                    .addComponent(badelante)
                    .addComponent(bultimo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Datos del cliente:");

        tid.setBackground(new java.awt.Color(255, 255, 102));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 703, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(129, 129, 129))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bbuscar)
                                .addGap(125, 125, 125))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(tcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(117, 117, 117))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(bnuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bver, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                        .addComponent(bmodificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(bborrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addContainerGap()))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bbuscar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(tcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bnuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bborrar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bmodificar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bver, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        bsalir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bsalir.setText("SALIR");
        bsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bsalirActionPerformed(evt);
            }
        });

        bvertodos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bvertodos.setText("VER TODOS");
        bvertodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bvertodosActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Fecha:");

        labfecha.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labfecha.setText("labfecha");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(641, 641, 641)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(143, 143, 143))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(bvertodos, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128)
                        .addComponent(bsalir, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(labfecha)
                                .addGap(210, 210, 210)
                                .addComponent(jLabel1))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel12)
                    .addComponent(labfecha))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bsalir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bvertodos, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 732, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // BOTON BUSCAR
    private void bbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbuscarActionPerformed
        // TODO add your handling code here:
        badelante.setEnabled(true);
        batras.setEnabled(true);
        bprimero.setEnabled(true);
        bultimo.setEnabled(true);
        limpiarDatos();
        limpiarTablaAlquileres();
        int n= combo.getSelectedIndex();
        Boolean sigue=true;
        Clientes aux= new Clientes();
        baceptar.setEnabled(false);
        bcancelar.setEnabled(false);
        if (n==0){      //Busca por id
            m1 = patronnumerico.matcher(tcliente.getText());
            if (m1.find()){     // Si es un dato numerico
                aux = (Clientes)session.get(Clientes.class, Integer.parseInt(tcliente.getText()));
                    if (aux==null){
                        //sigue=true;
                        tcliente.setText("");
                        JOptionPane.showMessageDialog(rootPane, "El cliente no existe");
                    }
                    else{       
                        //sigue=false;                    
                        tid.setText(""+aux.getIdcli());
                        tnombre.setText(aux.getNombre());
                        tapellidos.setText(aux.getApellidos());
                        tdireccion.setText(aux.getDireccion());
                        tcp.setText(aux.getCodpostal());
                        tlocalidad.setText(aux.getLocalidad());
                        tprovincia.setText(aux.getProvincia());
                        ttfn.setText(aux.getTelefono());  
                        bnuevo.setEnabled(true);
                        bborrar.setEnabled(true);
                        bmodificar.setEnabled(true);
                        bver.setEnabled(true);
                    }
            }else if (!m1.find()){
                tcliente.setText("");
                JOptionPane.showMessageDialog(rootPane, "Debe introducir un valor numerico si busca por ID");
            }            
        }
        if (n==1){      //Busca por nombre
            String nombre= tcliente.getText();
            m1 = patrontextual.matcher(nombre);
            cuentaClientes(session);
            if (m1.find()){
                for (int i=1; i<=contador; i++){
                    aux = (Clientes)session.get(Clientes.class, i);
                    String clinom= aux.getNombre();
                    if (clinom.compareToIgnoreCase(nombre)==0){
                        sigue=false;                   
                        tid.setText(""+aux.getIdcli());
                        tnombre.setText(aux.getNombre());
                        tapellidos.setText(aux.getApellidos());
                        tdireccion.setText(aux.getDireccion());
                        tcp.setText(aux.getCodpostal());
                        tlocalidad.setText(aux.getLocalidad());
                        tprovincia.setText(aux.getProvincia());
                        ttfn.setText(aux.getTelefono()); 
                        bnuevo.setEnabled(false);
                        bborrar.setEnabled(false);
                        bmodificar.setEnabled(false);
                        bver.setEnabled(false);
                    }
                    else{         
                        sigue=true;
                        tcliente.setText("");
                        
                    }
                }
                if (sigue){
                    JOptionPane.showMessageDialog(rootPane, "No existe "+nombre);
                }
            }else if (!m1.find()){
                tcliente.setText("");
                JOptionPane.showMessageDialog(rootPane, "Debe introducir caracteres alfabeticos si busca por nombre");
            }
        }         
    }//GEN-LAST:event_bbuscarActionPerformed

    private void bsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bsalirActionPerformed
        // TODO add your handling code here:
        limpiarTablaAlquileres();
        this.dispose();
    }//GEN-LAST:event_bsalirActionPerformed

    private void bnuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnuevoActionPerformed
        // TODO add your handling code here:
        estado=1;
        tcliente.setText("");
        limpiarDatos();
        limpiarTablaAlquileres();
        bprimero.setEnabled(false);
        batras.setEnabled(false);
        badelante.setEnabled(false);
        bultimo.setEnabled(false);
        bbuscar.setEnabled(false);
        tcliente.setEditable(false);
        bnuevo.setEnabled(false);
        bborrar.setEnabled(false);
        bmodificar.setEnabled(false);
        bver.setEnabled(false);
        datosActivos();
        baceptar.setEnabled(true);
        bcancelar.setEnabled(true);
        //cuentaClientes(session);
        
        int id = contador+1;
        tid.setText(""+id);
    }//GEN-LAST:event_bnuevoActionPerformed

    private void baceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baceptarActionPerformed
        // TODO add your handling code here:
        String nombre,apellidos, direccion,codpostal, localidad,provincia, telefono, observaciones; 
        boolean sigue= true;
        Clientes aux= new Clientes();
        if (estado==1){
            try{  
                
                Clientes a= new Clientes(Integer.parseInt(tid.getText()),tnombre.getText(),tapellidos.getText(),tdireccion.getText(),tcp.getText(),tlocalidad.getText(),tprovincia.getText(), ttfn.getText(),tobservaciones.getText());
                session.beginTransaction();
                session.save(a);
                session.getTransaction().commit(); 
                JOptionPane.showMessageDialog(rootPane,"Cliente introducido correctamente");
                limpiarDatos();
                baceptar.setEnabled(false);
                bcancelar.setEnabled(false);
                tcliente.setText("");
                tcliente.setEditable(true);
                bbuscar.setEnabled(true);
                bnuevo.setEnabled(true);
                contador=contador+1;
            }
            catch (Exception e){
                e.getMessage();
            }    
        }
        if (estado==2){
            try{
                while (sigue){
                    aux = (Clientes)session.get(Clientes.class, Integer.parseInt(tid.getText()));
                    if (aux == null){
                        JOptionPane.showMessageDialog(rootPane,"El ID no existe");
                        sigue= true;
                    }
                    else {            
                        sigue= false;
                        aux.setNombre(tnombre.getText());
                        aux.setApellidos(tapellidos.getText());
                        aux.setDireccion(tdireccion.getText());
                        aux.setCodpostal(tcp.getText());
                        aux.setLocalidad(tlocalidad.getText());
                        aux.setProvincia(tprovincia.getText());
                        aux.setTelefono(ttfn.getText());
                        aux.setObservaciones(tobservaciones.getText());
                        session.beginTransaction();
                        session.update(aux);
                        session.getTransaction().commit(); 
                        JOptionPane.showMessageDialog(rootPane,"Datos modificados correctamente"); 
                        baceptar.setEnabled(false);
                        bcancelar.setEnabled(false);
                        datosInactivos();
                        tcliente.setText("");
                        tcliente.setEditable(true);
                        bbuscar.setEnabled(true);
                        bnuevo.setEnabled(true);   
                        bborrar.setEnabled(true);
                        bmodificar.setEnabled(true);
                        bver.setEnabled(true);
                    }
                }
            }
            catch (Exception e){
                e.getMessage();
            }    
        }
    }//GEN-LAST:event_baceptarActionPerformed

    private void bcancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcancelarActionPerformed
        // TODO add your handling code here:
        if (estado==1){
            limpiarDatos();
            datosInactivos();
            tcliente.setEditable(true);
            bbuscar.setEnabled(true);
            bnuevo.setEnabled(true);
            
        }
        if (estado==2){
            datosInactivos();
            tcliente.setEditable(true);
            bbuscar.setEnabled(true);
            bnuevo.setEnabled(true);
        }
        
    }//GEN-LAST:event_bcancelarActionPerformed

    private void bvertodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bvertodosActionPerformed
        // TODO add your handling code here:
        limpiarTablaAlquileres();
        TodosClientes td=new TodosClientes(this,true);
        td.setVisible(true);
    }//GEN-LAST:event_bvertodosActionPerformed

    private void bborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bborrarActionPerformed
        // TODO add your handling code here:
        tcliente.setText("");
        String confirmado;
        boolean sigue=true;
        boolean encontrado = false;
        Clientes aux= new Clientes();
        try{
            while (sigue){
                aux = (Clientes)session.get(Clientes.class, Integer.parseInt(tid.getText()));
                if (aux == null){
                    JOptionPane.showMessageDialog(rootPane,"El ID no existe");
                    sigue= true;
                }
                else {            
                    sigue= false;
                    confirmado= JOptionPane.showInputDialog(rootPane,"Desea eliminarlo? S/N");
                    if (confirmado.compareToIgnoreCase("S")==0){
                        
                        Query q = session.createQuery("from Alquiler where idcli="+tid.getText()+" and fechadev="+null);
                        Iterator<Clientes> iter= q.iterate();
                        if (iter.hasNext()) {
                            encontrado=true;
                            JOptionPane.showMessageDialog(rootPane, "Este cliente tiene alquileres pendientes de devolución");
                        }
                        
                        else {
                            session.beginTransaction();
                            session.delete(aux);
                            session.getTransaction().commit();
                            JOptionPane.showMessageDialog(rootPane,"Cliente eliminado");
                            limpiarTablaAlquileres();
                            limpiarDatos();
                            bborrar.setEnabled(false);
                            bmodificar.setEnabled(false);
                            bver.setEnabled(false);
                        }
                            
                        
                    }
                }
            }
        }
        catch (Exception e){
            e.getMessage();
        }  
        cuentaClientes(session);
    }//GEN-LAST:event_bborrarActionPerformed

    private void bmodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmodificarActionPerformed
        // TODO add your handling code here:
        estado=2;
        BotonesInactivos();
        datosActivos();
        baceptar.setEnabled(true);
        bcancelar.setEnabled(true);  
        bnuevo.setEnabled(false);
        bbuscar.setEnabled(false);
        tcliente.setEditable(false);
        tcliente.setText("");
        
    }//GEN-LAST:event_bmodificarActionPerformed

    private void bprimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bprimeroActionPerformed
        // TODO add your handling code here:
        limpiarTablaAlquileres();
        int min=primerCliente(session);
        Clientes aux= aux = (Clientes)session.get(Clientes.class, min);
                    if (aux==null){
                        tcliente.setText("");
                    }
                    else{ 
                        tid.setText(""+aux.getIdcli());
                        tnombre.setText(aux.getNombre());
                        tapellidos.setText(aux.getApellidos());
                        tdireccion.setText(aux.getDireccion());
                        tcp.setText(aux.getCodpostal());
                        tlocalidad.setText(aux.getLocalidad());
                        tprovincia.setText(aux.getProvincia());
                        ttfn.setText(aux.getTelefono());  
                        bnuevo.setEnabled(true);
                        bborrar.setEnabled(true);
                        bmodificar.setEnabled(true);
                        bver.setEnabled(true);
                    }
                    
    }//GEN-LAST:event_bprimeroActionPerformed

    private void bultimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bultimoActionPerformed
        // TODO add your handling code here:
        limpiarTablaAlquileres();
        MostrarUltimoRegistro();
    }//GEN-LAST:event_bultimoActionPerformed
    public void MostrarUltimoRegistro(){
        int max=ultimoCliente(session);
        Clientes aux= aux = (Clientes)session.get(Clientes.class, max);
                    if (aux==null){
                        tcliente.setText("");
                    }
                    else{ 
                        tid.setText(""+aux.getIdcli());
                        tnombre.setText(aux.getNombre());
                        tapellidos.setText(aux.getApellidos());
                        tdireccion.setText(aux.getDireccion());
                        tcp.setText(aux.getCodpostal());
                        tlocalidad.setText(aux.getLocalidad());
                        tprovincia.setText(aux.getProvincia());
                        ttfn.setText(aux.getTelefono());  
                        bnuevo.setEnabled(true);
                        bborrar.setEnabled(true);
                        bmodificar.setEnabled(true);
                        bver.setEnabled(true);
                    }
    }
    
    public int calculaPosicion(){
        int posicion=0;
        Query q = session.createQuery("from Clientes where idcli="+Integer.parseInt(tid.getText()));
        Iterator<Clientes> iter= q.iterate();
        while(iter.hasNext()){
            posicion=posicion+1;
        }
        return posicion;
    }
   
        
    private void batrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batrasActionPerformed
        // TODO add your handling code here:
        limpiarTablaAlquileres();
        int posicion=1;
        boolean sigue=true;
        Clientes aux2;
        tcliente.setText("");
        int codigo=Integer.parseInt(tid.getText());
           for (int i=1; i<=contador; i++){
                aux2 = (Clientes)session.get(Clientes.class, i);
                int cod=aux2.getIdcli();
                    if (cod==codigo){
                        i= contador+1;
                    }
                    else{
                        posicion=posicion+1;
                    }
            } 
        //JOptionPane.showMessageDialog(rootPane, "Estas en el "+posicion);
        if (posicion>=1){
                    Clientes aux= (Clientes)session.get(Clientes.class, posicion-1);
                    if (aux==null){
                        tcliente.setText("");
                    }
                    else{ 
                        tid.setText(""+aux.getIdcli());
                        tnombre.setText(aux.getNombre());
                        tapellidos.setText(aux.getApellidos());
                        tdireccion.setText(aux.getDireccion());
                        tcp.setText(aux.getCodpostal());
                        tlocalidad.setText(aux.getLocalidad());
                        tprovincia.setText(aux.getProvincia());
                        ttfn.setText(aux.getTelefono());  
                        bnuevo.setEnabled(true);
                        bborrar.setEnabled(true);
                        bmodificar.setEnabled(true);
                        bver.setEnabled(true);
                    }
        }else{
            JOptionPane.showMessageDialog(rootPane, "No hay mas registros");
        }
                  
    }//GEN-LAST:event_batrasActionPerformed

    private void badelanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_badelanteActionPerformed
        // TODO add your handling code here:
        limpiarTablaAlquileres();
        int posicion=1;
        boolean sigue=true;
        Clientes aux2;
        tcliente.setText("");
        int codigo=Integer.parseInt(tid.getText());
           for (int i=1; i<=contador; i++){
                aux2 = (Clientes)session.get(Clientes.class, i);
                int cod=aux2.getIdcli();
                    if (cod==codigo){
                        i= contador+1;
                    }
                    else{
                        posicion=posicion+1;
                    }
            } 
        //JOptionPane.showMessageDialog(rootPane, "Estas en el "+posicion);
        if (posicion<=contador){
                    Clientes aux= (Clientes)session.get(Clientes.class, posicion+1);
                    if (aux==null){
                        tcliente.setText("");
                    }
                    else{ 
                        tid.setText(""+aux.getIdcli());
                        tnombre.setText(aux.getNombre());
                        tapellidos.setText(aux.getApellidos());
                        tdireccion.setText(aux.getDireccion());
                        tcp.setText(aux.getCodpostal());
                        tlocalidad.setText(aux.getLocalidad());
                        tprovincia.setText(aux.getProvincia());
                        ttfn.setText(aux.getTelefono());  
                        bnuevo.setEnabled(true);
                        bborrar.setEnabled(true);
                        bmodificar.setEnabled(true);
                        bver.setEnabled(true);
                    }
        }else{
            JOptionPane.showMessageDialog(rootPane, "No hay mas registros");
        }
        
    }//GEN-LAST:event_badelanteActionPerformed

    private void bverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bverActionPerformed
        // TODO add your handling code here:
        limpiarTablaAlquileres();
        MostrarAlquileres(session);
            
       // }
        
    }//GEN-LAST:event_bverActionPerformed
    public void MostrarAlquileres(Session s){
        Alquiler a= new Alquiler();
        Query q = s.createQuery("from Alquiler where idcli="+tid.getText());
        Iterator<Alquiler> iter= q.iterate();
        Object[] fila= new Object[6];
        java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd");
        int i=0;
        while (iter.hasNext()){
                a= (Alquiler) iter.next();
                AlquilerId ai= a.getId();
                fila[0]= ai.getIdcli();
                fila[1]= ai.getIdpel();
                fila[2]= ai.getNum();
                String fechaalq= sdf.format(ai.getFechaalq());
                fila[3]= fechaalq ;
                fila[4]= agregarDias(ai.getFechaalq(),3);
                fila[5]= a.getFechadev();
        //        fila[5]= a.getImporte();
            //System.out.println(""+a);
            modelo.addRow(fila);
        }
    } 
    
    
    public static String agregarDias(Date fecha,int dia){
            Calendar cal = new GregorianCalendar();
            cal.setLenient(false);
            cal.setTime(fecha);
            //cal.set(cal.get(Calendar.YEAR)+ano,cal.get( Calendar.MONTH)+mes,cal.get( Calendar.DAY_OF_MONTH)+dia);
            cal.add(Calendar.DAY_OF_MONTH, dia);
            java.text.SimpleDateFormat sdf=new java.text.SimpleDateFormat("yyyy-MM-dd");
            String fecha2 = sdf.format(cal.getTime());
            return fecha2;
     }
    
    // -------------- LIMPIAR LA TABLA ---------------------------------
    void limpiarTablaAlquileres(){
        while (TabAlquileres.getRowCount()!=0){
           ((DefaultTableModel)TabAlquileres.getModel()).removeRow(0);
        }
    }
    // ------------- LIMPIAR DATOS DEL CLIENTE ------------------------
    void limpiarDatos(){
        tid.setText("");
        tnombre.setText("");
        tapellidos.setText("");
        tdireccion.setText("");
        tcp.setText("");
        tlocalidad.setText("");
        tprovincia.setText("");
        ttfn.setText("");
        tobservaciones.setText("");
    }
    public void BotonesInactivos(){    
        bborrar.setEnabled(false);
        bmodificar.setEnabled(false);
        bver.setEnabled(false);
        bvertodos.setEnabled(true);
        baceptar.setEnabled(false);
        bcancelar.setEnabled(false);
        /*bprimero.setEnabled(false);
        bultimo.setEnabled(false);
        batras.setEnabled(false);
        badelante.setEnabled(false);*/
    }
    public void datosActivos(){
        tid.setEditable(true);
        tnombre.setEditable(true);
        tapellidos.setEditable(true);
        tdireccion.setEditable(true);
        tlocalidad.setEditable(true);
        tcp.setEditable(true);
        tprovincia.setEditable(true);
        ttfn.setEditable(true);
        tobservaciones.setEditable(true);
    }
    public void datosInactivos(){
        tid.setEditable(false);
        tnombre.setEditable(false);
        tapellidos.setEditable(false);
        tdireccion.setEditable(false);
        tlocalidad.setEditable(false);
        tcp.setEditable(false);
        tprovincia.setEditable(false);
        ttfn.setEditable(false);
        tobservaciones.setEditable(false);
    }
    
    public void MostrarSeleccionado(int id){
        limpiarTablaAlquileres();
        Clientes aux=new Clientes();
        boolean sigue;
        aux = (Clientes)session.get(Clientes.class, id);
                    if (aux==null){
                        sigue=true;
                        tcliente.setText("");
                        JOptionPane.showMessageDialog(rootPane, "El cliente no existe");
                    }
                    else{       
                        sigue=false;                    
                        tid.setText(""+aux.getIdcli());
                        tnombre.setText(aux.getNombre());
                        tapellidos.setText(aux.getApellidos());
                        tdireccion.setText(aux.getDireccion());
                        tcp.setText(aux.getCodpostal());
                        tlocalidad.setText(aux.getLocalidad());
                        tprovincia.setText(aux.getProvincia());
                        ttfn.setText(aux.getTelefono());  
                        bnuevo.setEnabled(true);
                        bborrar.setEnabled(true);
                        bmodificar.setEnabled(true);
                        bver.setEnabled(true);
                    }
    }
           
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaClientes dialog = new VentanaClientes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabAlquileres;
    private javax.swing.JButton baceptar;
    private javax.swing.JButton badelante;
    private javax.swing.JButton batras;
    private javax.swing.JButton bborrar;
    private javax.swing.JButton bbuscar;
    private javax.swing.JButton bcancelar;
    private javax.swing.JButton bmodificar;
    private javax.swing.JButton bnuevo;
    private javax.swing.JButton bprimero;
    private javax.swing.JButton bsalir;
    private javax.swing.JButton bultimo;
    private javax.swing.JButton bver;
    private javax.swing.JButton bvertodos;
    private javax.swing.JComboBox combo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labfecha;
    private javax.swing.JTextField tapellidos;
    private javax.swing.JTextField tcliente;
    private javax.swing.JTextField tcp;
    private javax.swing.JTextField tdireccion;
    private javax.swing.JTextField tid;
    private javax.swing.JTextField tlocalidad;
    private javax.swing.JTextField tnombre;
    private javax.swing.JTextField tobservaciones;
    private javax.swing.JTextField tprovincia;
    private javax.swing.JTextField ttfn;
    // End of variables declaration//GEN-END:variables
}
